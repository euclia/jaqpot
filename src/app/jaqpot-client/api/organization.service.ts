/**
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train
 * machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials.
 * The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/member-ordering */

import { Injectable } from '@angular/core';
import '../rxjs-operators';

import { SessionService } from '../../session/session.service';
import { DialogsService } from '../../dialogs/dialogs.service';
import { OidcSecurityService } from 'angular-auth-oidc-client';
import {
  EucliaAccountsFactory,
  IEucliaAccounts,
} from '@euclia/accounts-client';
import { Organization } from '@euclia/accounts-client';
import { environment } from '../../../environments/environment';

@Injectable()
export class OrganizationService {
  _privateBasePath: string;
  _organizationBase: string;
  private accountsClient: IEucliaAccounts;

  constructor(
    public sessionService: SessionService,
    public dialogsService: DialogsService,
    public oidcSecurityService: OidcSecurityService,
  ) {
    this._privateBasePath = environment.jaqpotApi;
    this.accountsClient = new EucliaAccountsFactory(
      environment.accountsApi,
    ).getClient();
    this._organizationBase = this._privateBasePath + '/organization/';
  }

  public getOrgById(id: string): Promise<Organization> {
    const token = this.oidcSecurityService.getAccessToken();
    return this.accountsClient.getOrganization(id, token);
  }
}
